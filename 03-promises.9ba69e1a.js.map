{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAUtC,SAASC,EAAcC,EAAUC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GAUvC,OATiB,IAAIC,SAAQ,SAACC,EAASC,GACrCC,YAAW,WACLN,EACJI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEpBA,E,IAjBJL,EAAOa,iBAAiB,UAsBxB,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAQhB,EAAOiB,SAAS,GAAGC,MAC/BC,QAAQC,IAAIJ,GAEZ,IAAMK,EAAOrB,EAAOiB,SAAS,GAAGC,MAChCC,QAAQC,IAAIC,GAEZ,IAAMC,EAAStB,EAAOiB,SAAS,GAAGC,MAClCC,QAAQC,IAAIE,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAE,CACjC,IAAIC,EAAOR,EAAQO,EAAIF,EACvBF,QAAQC,IAAII,GACZrB,EAAcoB,EAAE,EAAGC,GACfC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACnBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEtE0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACnBsB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,QAxC9Ec,QAAQc,IAAIjC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\nconst formEl = document.querySelector('.form')\n// formEl.addEventListener('input', onInput)\nformEl.addEventListener('submit', onSubmit)\nconsole.dir(formEl);\n\n// let formArr = []\n // function onInput(e) {\n//     formArr[e.target.name] = Number(e.target.value)\n// }\n \nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n   const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  },delay)\n})\n  return promise\n}\n\nfunction onSubmit(event) {\n  event.preventDefault()\n      // let delay = formArr.delay\n  let delay = formEl.elements[0].value\n  console.log(delay);\n  // const step = formArr.step\n  const step = formEl.elements[1].value\n  console.log(step);\n  // const amount = formArr.amount\n  const amount = formEl.elements[2].value\n  console.log(amount);\n      for (let i = 0; i < amount; i += 1){\n        let time = delay + i * step\n        console.log(time);\n        createPromise(i+1, time)\n           .then(({ position, delay }) => {           \n           Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);  \n  })\n          .catch(({ position, delay }) => {\n           Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);            \n  })\n  }\n}\n    \n\n  \n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","elements","value","console","log","step","amount","i","time","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","dir"],"version":3,"file":"03-promises.9ba69e1a.js.map"}